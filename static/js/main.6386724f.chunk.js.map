{"version":3,"sources":["images/logo.svg","components/Header.js","contexts/CurrentUserContext.js","components/Card.js","components/Footer.js","components/Main.js","utils/api.js","utils/auth.js","components/Register.js","components/Login.js","components/InfoTooltip.js","images/applied.svg","images/badrequest.svg","components/PopupWithForm.js","components/EditProfilePopup.js","components/ImagePopup.js","components/EditAvatarPopup.js","components/AddPlacePopup.js","components/FormValidator.js","utils/utils.js","components/ProtectedRoute.js","components/App.js","reportWebVitals.js","index.js"],"names":["Header","props","location","useLocation","className","src","logo","alt","email","pathname","to","type","onClick","onSignOut","CurrentUserContext","React","createContext","Card","currentUser","useContext","isOwn","card","owner","_id","cardDeleteButtonClassName","isLiked","likes","some","i","cardLikeButtonClassName","link","name","onCardClick","onCardDelete","onCardLike","length","Footer","Main","avatar","onEditAvatar","onEditProfile","about","onAddPlace","TransitionGroup","component","cards","map","CSSTransition","classNames","timeout","api","options","this","_url","url","_headers","headers","res","ok","json","Promise","reject","status","all","getUserData","getInitialCards","fetch","then","_checkResponse","userdata","method","body","JSON","stringify","data","cardId","authorization","BASE_URL","Register","useState","password","setPassword","setEmail","navigate","useNavigate","onSubmit","evt","preventDefault","auth","console","log","onRegister","catch","err","onError","autoComplete","id","placeholder","required","value","onChange","target","minLength","maxLength","Login","onLogin","InfoTooltip","isOpen","onPopupClick","onClose","image","title","PopupWithForm","noValidate","onSubmitForm","children","class","buttonText","EditProfilePopup","setName","description","setDescription","useEffect","onUpdateUser","ImagePopup","EditAvatarPopups","avatarRef","useRef","current","onUpdateAvatar","ref","AddPlacePopup","setLink","FormValidator","settings","formElement","_formElement","_inputSelector","inputSelector","_submitButtonSelector","submitButtonSelector","_inactiveButtonClass","inactiveButtonClass","_inputErrorClass","inputErrorClass","_errorClass","errorClass","_inputList","Array","from","querySelectorAll","_buttonElement","querySelector","inputElement","_getErrorElement","classList","add","_errorElement","textContent","validationMessage","remove","validity","valid","_hideInputError","_showInputError","_checkFormValidity","setAttribute","removeAttribute","_toggleButtonState","forEach","addEventListener","_checkInputValidity","_setEventListeners","ProtectedRoute","Component","loggedIn","replace","App","setCards","isOpenInfoTooltipError","setIsOpenInfoTooltipError","isOpenInfoTooltipSuccess","setIsOpenInfoTooltipSuccess","isEditProfilePopupOpen","setIsEditProfilePopupOpen","isAddPlacePopupOpen","setIsAddPlacePopupOpen","isEditAvatarPopupOpen","setIsEditAvatarPopupOpen","isConfirmDeletePopupOpen","setIsConfirmDeletePopupOpen","selectedCard","setSelectedCard","forDeleteCard","setForDeleteCard","setLoggedIn","setCurrentUser","closeAllPopups","handlePopupClick","contains","document","forms","profileEdit","enableValidation","cardAdd","avatarEdit","resetValidation","token","localStorage","getItem","handleEsc","key","removeEventListener","Provider","removeItem","path","element","changeLikeCardStatus","newCard","state","c","setItem","applied","badrequest","userInfo","patchUserData","cardData","uploadNewCard","EditAvatarPopup","patchUserAvatar","deleteCard","filter","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.6386724f.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.bbe2a6ea.svg\";","import logo from '../images/logo.svg';\nimport { Link, useLocation } from 'react-router-dom';\n\nfunction Header(props) {\n\n  let location = useLocation();\n\n  return (\n    <header className=\"header\">\n      <img className=\"header__logo\" src={logo} alt=\"логотип место, Россия\" />\n      <div className=\"header__container\">\n        <p className=\"header__user-email\">{props.email}</p>\n        {location.pathname === '/signin' && <Link\n        to='/signup' className=\"header__link\">Регистрация</Link>}\n\n        {location.pathname === '/signup' && <Link\n        to='/signin' className=\"header__link\">Войти</Link>}\n\n        {location.pathname === '/main' && <button type='button'\n        className='header__link header__link_type_button' onClick={props.onSignOut}>Выйти</button>}\n\n      </div>\n\n    </header>\n  )\n};\n\nexport default Header;\n","import React from 'react';\nexport const CurrentUserContext = React.createContext();\n","import React from 'react';\nimport { CurrentUserContext } from '../contexts/CurrentUserContext';\n\nfunction Card(props) {\n  const currentUser = React.useContext(CurrentUserContext);\n\n  // отображать ли кнопку удаления карточки?\n  const isOwn = props.card.owner._id === currentUser._id;\n  const cardDeleteButtonClassName = (\n    `element__delete-button ${isOwn ? 'element__delete-button' : 'element__delete-button_disabled'}`\n  );\n\n  // отображать ли свой лайк на карточке?\n  const isLiked = props.card.likes.some(i => i._id === currentUser._id);\n  const cardLikeButtonClassName = (\n    `element__like-button ${isLiked ? 'element__like-button_type_active' : 'element__like-button'}`\n  );\n\n  function handleClick() {\n    props.onCardClick(props.card);\n  }\n\n  function handleLikeClick() {\n    props.onCardLike(props.card);\n  }\n\n  function handleDeleteClick() {\n    props.onCardDelete(props.card)\n  }\n\n  return (\n        <article className=\"element\">\n          <img className=\"element__image\" src={props.card.link} alt={props.card.name}\n            onClick={handleClick} />\n          <button className={cardDeleteButtonClassName} type=\"button\"\n            onClick={handleDeleteClick}></button>\n          <div className=\"element__description\">\n            <h2 className=\"element__name\">{props.card.name}</h2>\n            <div className=\"element__like-container\">\n              <button className={cardLikeButtonClassName} type=\"button\"\n                onClick={handleLikeClick}></button>\n              <span className=\"element__like-value\">{props.card.likes.length}</span>\n            </div>\n          </div>\n        </article>\n  )\n}\n\nexport default Card;\n","function Footer() {\n  return (\n    <footer className=\"footer\">\n      <p className=\"footer__copyright\">&copy; 2021 Mesto Russia</p>\n    </footer>\n  )\n}\n\nexport default Footer;\n","import React from 'react';\nimport Card from './Card.js';\nimport Footer from './Footer';\nimport { CurrentUserContext } from '../contexts/CurrentUserContext';\nimport { CSSTransition, TransitionGroup } from 'react-transition-group';\n\nfunction Main(props) {\n  const currentUser = React.useContext(CurrentUserContext);\n  return (\n    <main className=\"content\">\n      <section className=\"profile\">\n        <div className=\"profile__info\">\n          <img className=\"profile__avatar\" src={currentUser.avatar} alt=\"\" />\n          <button className=\"profile__avatar-button\" type=\"button\"\n            onClick={props.onEditAvatar}></button>\n          <div className=\"profile__info-block\">\n            <h1 className=\"profile__name\">{currentUser.name}</h1>\n            <button className=\"profile__edit-button\" type=\"button\"\n              onClick={props.onEditProfile}></button>\n            <p className=\"profile__job\">{currentUser.about}</p>\n          </div>\n        </div>\n        <button className=\"profile__add-button\" type=\"button\"\n          onClick={props.onAddPlace}></button>\n      </section>\n      <section className=\"elements\">\n        <TransitionGroup component={null}>\n          {props.cards.map((card) =>\n            <CSSTransition  classNames=\"element-animated\" timeout={700} key={card._id} >\n              <Card card={card} onCardClick={props.onCardClick}\n                onCardLike={props.onCardLike} onCardDelete={props.onCardDelete} />\n            </CSSTransition >\n          )}\n        </TransitionGroup>\n      </section>\n      <Footer />\n    </main>\n  )\n}\n\nexport default Main;\n","class Api {\n  constructor(options) {\n      this._url = options.url;\n      this._headers = options.headers;\n  }\n\n  _checkResponse(res) {\n      if (res.ok) {\n        return res.json();\n      }\n      return Promise.reject(`Ошибка: ${res.status}`);\n  }\n\n  getPageInfo() {\n    return Promise.all([this.getUserData(), this.getInitialCards()]);\n  }\n\n  getUserData() {\n    return fetch(`${this._url}users/me`, {\n      headers: this._headers\n    })\n    .then(this._checkResponse);\n  }\n\n  getInitialCards() {\n    return fetch(`${this._url}cards`, {\n      headers: this._headers\n    })\n    .then(this._checkResponse);\n  }\n\n  patchUserData(userdata) {\n    return fetch(`${this._url}users/me`, {\n      method: \"PATCH\",\n      headers: this._headers,\n      body: JSON.stringify({\n        name: userdata.name,\n        about: userdata.about\n      })\n    })\n    .then(this._checkResponse);\n  }\n\n  uploadNewCard(data) {\n    return fetch(`${this._url}cards`, {\n      method: \"POST\",\n      headers: this._headers,\n      body: JSON.stringify({\n        name: data.name,\n        link: data.link\n      })\n    })\n    .then(this._checkResponse);\n  }\n\n  deleteCard(cardId) {\n    return fetch(`${this._url}cards/${cardId}`, {\n      method: \"DELETE\",\n      headers: this._headers\n    })\n    .then(this._checkResponse);\n  }\n\n  changeLikeCardStatus(cardId, isLiked) {\n    return fetch(`${this._url}cards/likes/${cardId}`, {\n      method: !isLiked ? \"PUT\" : \"DELETE\",\n      headers: this._headers\n    })\n    .then(this._checkResponse);\n  }\n\n  patchUserAvatar(data) {\n    return fetch(`${this._url}users/me/avatar`, {\n      method: \"PATCH\",\n      headers: this._headers,\n      body: JSON.stringify({\n        avatar: data.avatar\n      })\n    })\n    .then(this._checkResponse);\n  }\n\n}\n\nconst api = new Api({\n  url: \"https://mesto.nomoreparties.co/v1/cohort-29/\",\n  headers: {\n    authorization: \"0fe39d88-814c-4d9c-a2d1-36a2026603cf\",\n    \"Content-type\": \"application/json\"\n  }\n});\n\nexport default api;\n","export const BASE_URL = 'https://auth.nomoreparties.co';\n\nexport const register = (password, email) => {\n  return fetch(`${BASE_URL}/signup`, {\n    method: 'POST',\n    headers: {\n      \"Content-Type\": \"application/json\"\n    },\n    body: JSON.stringify({\n      password,\n      email\n    })\n  })\n    .then((res) => {\n      if (res.ok) {\n        return res.json()\n      }\n      return Promise.reject(`Ошибка: ${res.status}`)\n    })\n}\n\nexport const authorize = (password, email) => {\n  return fetch(`${BASE_URL}/signin`, {\n    method: 'POST',\n    headers: {\n      \"Content-Type\": \"application/json\"\n    },\n    body: JSON.stringify({\n      password,\n      email\n    })\n  })\n    .then((res) => {\n      if (res.ok) {\n        return res.json()\n      }\n      return Promise.reject(`Ошибка: ${res.status}`)\n    })\n}\n\nexport const checkToken = (token) => {\n  return fetch(`${BASE_URL}/users/me`, {\n    method: 'GET',\n    headers: {\n      \"Content-Type\": \"application/json\",\n      \"Authorization\" : `Bearer ${token}`\n    }\n  })\n    .then((res) => {\n      if (res.ok) {\n        return res.json()\n      }\n      return Promise.reject(`Ошибка: ${res.status}`)\n    })\n}\n","import React from \"react\";\nimport { Link, useNavigate } from 'react-router-dom';\nimport * as auth from '../utils/auth';\n\nfunction Register(props) {\n\n  const [password, setPassword] = React.useState('');\n  const [email, setEmail] = React.useState('');\n  const navigate = useNavigate()\n\n  function handleChangePassword(evt) {\n    setPassword(evt.target.value)\n  }\n  function handleChangeEmail(evt) {\n    setEmail(evt.target.value)\n  }\n\n  function handleSubmit(evt) {\n    evt.preventDefault();\n    auth.register(password, email)\n      .then(res => {\n        console.log(res)\n        props.onRegister()\n        navigate('/signin')\n      })\n      .catch((err) => {\n        props.onError()\n        console.log(err)\n      })\n  }\n\n  return (\n    <section className=\"registration\">\n      <h2 className=\"registration__heading\">Регистрация</h2>\n      <form className=\"form registration-form\" name=\"registration\"\n        onSubmit={handleSubmit}>\n        <input type=\"email\" autoComplete=\"off\" name=\"email\" id=\"email\"\n          placeholder=\"Email\" required className=\"form__input registration-form__input\"\n          value={email} onChange={handleChangeEmail} />\n        <span id=\"email-error\" className=\"form__error\"></span>\n        <input type=\"text\" autoComplete=\"off\" name=\"password\" id=\"password\"\n          required minLength=\"3\" maxLength=\"21\"\n          className=\"form__input registration-form__input\" placeholder=\"Пароль\"\n          value={password} onChange={handleChangePassword} />\n        <span id=\"password-error\" className=\"form__error\"></span>\n        <button className=\"form__submit-button registration-form__submit-button registration-form__submit-button_disabled\">\n          Зарегистрироваться\n        </button>\n        <div className=\"registration-form__signin\">\n          <p className=\"registration-form__signin-heading\" >Уже зарегистрированы?</p>\n          <Link to=\"/sign-in\" className=\"registration-form__login-link\">Войти</Link>\n        </div>\n      </form>\n    </section>\n  )\n}\n\nexport default Register;\n","import React from \"react\";\nimport * as auth from '../utils/auth';\n\nfunction Login(props) {\n\n  const [password, setPassword] = React.useState('');\n  const [email, setEmail] = React.useState('');\n\n  function handleChangePassword(evt) {\n    setPassword(evt.target.value)\n  }\n  function handleChangeEmail(evt) {\n    setEmail(evt.target.value)\n  }\n\n  function handleSubmit(evt) {\n    evt.preventDefault();\n    auth.authorize(password, email)\n      .then(data => {\n        setPassword('')\n        setEmail('')\n        props.onLogin(data)\n      })\n      .catch((err) => {\n        props.onError()\n        console.log(err)\n      })\n  }\n\n  return (\n    <section className=\"registration\">\n      <h2 className=\"registration__heading\">Вход</h2>\n      <form className=\"form registration-form\" name=\"login\"\n        onSubmit={handleSubmit}>\n        <input type=\"email\" autoComplete=\"off\" name=\"email\" id=\"email\"\n          placeholder=\"Email\" required className=\"form__input registration-form__input\"\n          value={email} onChange={handleChangeEmail} />\n        <span id=\"email-error\" className=\"form__error\"></span>\n        <input type=\"text\" autoComplete=\"off\" name=\"password\" id=\"password\"\n          required minLength=\"3\" maxLength=\"21\"\n          className=\"form__input registration-form__input\" placeholder=\"Пароль\"\n          value={password} onChange={handleChangePassword} />\n        <span id=\"password-error\" className=\"form__error\"></span>\n        <button className=\"form__submit-button registration-form__submit-button registration-form__submit-button_disabled\">\n          Войти\n        </button>\n      </form>\n    </section>\n  )\n}\n\nexport default Login;\n","export default function InfoTooltip(props) {\n  return(\n    <div className={`popup ${props.isOpen ? 'popup_opened' : ''}`}\n    onClick={props.onPopupClick}>\n      <div className=\"popup__container\">\n        <button className=\"popup__close-button\" type=\"button\"\n          onClick={props.onClose}>\n        </button>\n        <img alt=\"сообщение об ошибке или успешной регистрации\" className=\"popup__image\" src={props.image}/>\n        <h3 className=\"popup__heading popup__heading_type_info\">{props.title}</h3>\n      </div>\n    </div>\n  )\n}\n","export default __webpack_public_path__ + \"static/media/applied.1b6082f8.svg\";","export default __webpack_public_path__ + \"static/media/badrequest.df8eddf6.svg\";","function PopupWithForm(props) {\n  return (\n    <div className={`popup popup_type_${props.name} ${props.isOpen}`}\n      onClick={props.onPopupClick}>\n      <div className=\"popup__container\">\n        <button className=\"popup__close-button\" type=\"button\"\n          onClick={props.onClose}>\n        </button>\n        <h3 className=\"popup__heading\">{props.title}</h3>\n        <form noValidate name={props.name} className=\"form popup-form\" onSubmit={props.onSubmitForm}>\n          {props.children}\n          <button className={`form__submit-button popup-form__submit-button ${props.class}`}\n            type=\"submit\">{props.buttonText}</button>\n        </form>\n      </div>\n    </div>\n  )\n}\n\nexport default PopupWithForm;\n","import React from \"react\";\nimport PopupWithForm from \"./PopupWithForm\";\nimport { CurrentUserContext } from '../contexts/CurrentUserContext';\n\nfunction EditProfilePopup(props) {\n  const currentUser = React.useContext(CurrentUserContext);\n  const [name, setName] = React.useState('');\n  const [description, setDescription] = React.useState('');\n\n  function handleChangeName(evt) {\n    setName(evt.target.value)\n  }\n  function handleChangeDescription(evt) {\n    setDescription(evt.target.value)\n  }\n\n  React.useEffect(() => {\n    setName(currentUser.name);\n    setDescription(currentUser.about);\n  }, [currentUser, props.isOpen]);\n\n  function handleSubmit(evt) {\n    evt.preventDefault();\n    props.onUpdateUser({\n      name,\n      about: description,\n    });\n  }\n\n  return (\n    <PopupWithForm title=\"Редактировать профиль\" name={props.name} buttonText='Сохранить'\n      isOpen={props.isOpen ? 'popup_opened' : ''} onSubmitForm={handleSubmit}\n      onClose={props.onClose} onPopupClick={props.onPopupClick}>\n      <fieldset className=\"form__field\">\n        <input type=\"text\" autoComplete=\"off\" name=\"name\" id=\"name\"\n          required minLength=\"2\" maxLength=\"40\" className=\"form__input popup-form__input\"\n          value={name} onChange={handleChangeName} />\n        <span id=\"name-error\" className=\"form__error\"></span>\n        <input type=\"text\" autoComplete=\"off\" name=\"about\" id=\"about\"\n          required minLength=\"2\" maxLength=\"200\" className=\"form__input popup-form__input\"\n          value={description} onChange={handleChangeDescription} />\n        <span id=\"about-error\" className=\"form__error\"></span>\n      </fieldset>\n    </PopupWithForm>\n  )\n}\n\nexport default EditProfilePopup;\n","function ImagePopup(props) {\n  return (\n    <div className={`popup popup-card ${props.isOpen}`} onClick={props.onPopupClick}>\n      <div className=\"popup-card__container\">\n        <div className=\"popup-card__image-container\">\n          <img className=\"popup-card__image\" src={props.card.link} alt={props.card.name} />\n          <button className=\"popup__close-button popup__close-button_type_image-popup\"\n            type=\"button\" onClick={props.onClose}>\n          </button>\n        </div>\n        <span className=\"popup-card__image-name\">{props.card.name}</span>\n      </div>\n    </div>\n  )\n}\n\nexport default ImagePopup;\n","import React from \"react\";\nimport PopupWithForm from \"./PopupWithForm\";\n\nfunction EditAvatarPopups(props) {\n  const avatarRef = React.useRef();\n\n  function handleSubmit(evt) {\n    evt.preventDefault();\n    props.onUpdateAvatar({\n      avatar: avatarRef.current.value\n    });\n  }\n\n  React.useEffect(() => {\n    avatarRef.current.value = '';\n  }, [props.isOpen]);\n\n  return (\n    <PopupWithForm title=\"Обновить аватар\" name={props.name} buttonText='Сохранить'\n      isOpen={props.isOpen ? 'popup_opened' : ''} onSubmitForm={handleSubmit}\n      onClose={props.onClose} onPopupClick={props.onPopupClick}>\n      <fieldset className=\"form__field\">\n        <input type=\"url\" autoComplete=\"off\" name=\"avatar\" id=\"avatar\" placeholder=\"Ссылка на картинку\"\n          required className=\"form__input popup-form__input\"\n          ref={avatarRef} />\n        <span id=\"avatar-error\" className=\"form__error\"></span>\n      </fieldset>\n    </PopupWithForm>\n  )\n}\n\nexport default EditAvatarPopups;\n","import React from \"react\";\nimport PopupWithForm from \"./PopupWithForm\";\n\nfunction AddPlacePopup(props) {\n  const [name, setName] = React.useState('');\n  const [link, setLink] = React.useState('');\n\n  function handleChangeName(evt) {\n    setName(evt.target.value)\n  }\n  function handleChangeLink(evt) {\n    setLink(evt.target.value)\n  }\n\n  function handleSubmit(evt) {\n    evt.preventDefault();\n    props.onAddPlace({name, link});\n  }\n\n  React.useEffect(() => {\n    setName('');\n    setLink('');\n  }, [props.isOpen]);\n\n  return (\n    <PopupWithForm title=\"Новое место\" name={props.name} buttonText='Создать'\n      isOpen={props.isOpen ? 'popup_opened' : ''} onSubmitForm={handleSubmit}\n      onClose={props.onClose} onPopupClick={props.onPopupClick}>\n      <fieldset className=\"form__field\">\n        <input type=\"text\" autoComplete=\"off\" name=\"name\" id=\"title\" placeholder=\"Название\"\n          required minLength=\"2\" maxLength=\"30\" className=\"form__input popup-form__input\"\n          value={name} onChange={handleChangeName} />\n        <span id=\"title-error\" className=\"form__error\"></span>\n        <input type=\"url\" autoComplete=\"off\" name=\"link\" id=\"link\" placeholder=\"Ссылка на картинку\"\n          required className=\"form__input popup-form__input\"\n          value={link} onChange={handleChangeLink} />\n        <span id=\"link-error\" className=\"form__error\"></span>\n      </fieldset>\n    </PopupWithForm>\n  )\n}\n\nexport default AddPlacePopup;\n","export default class FormValidator {\n  constructor(settings, formElement) {\n    this._formElement = formElement;\n    this._inputSelector = settings.inputSelector;\n    this._submitButtonSelector = settings.submitButtonSelector;\n    this._inactiveButtonClass = settings.inactiveButtonClass;\n    this._inputErrorClass = settings.inputErrorClass;\n    this._errorClass = settings.errorClass;\n    this._inputList = Array.from(this._formElement.querySelectorAll(this._inputSelector));\n    this._buttonElement = this._formElement.querySelector(this._submitButtonSelector);\n  }\n\n  //объявляем функцию показа ошибки\n\n  _showInputError(inputElement) {\n    this._getErrorElement(inputElement);\n    inputElement.classList.add(this._inputErrorClass);\n    this._errorElement.textContent = inputElement.validationMessage;\n    this._errorElement.classList.add(this._errorClass);\n  }\n\n  //объявляем функцию скрытия ошибки\n\n  _hideInputError(inputElement) {\n    this._getErrorElement(inputElement);\n    inputElement.classList.remove(this._inputErrorClass);\n    this._errorElement.classList.remove(this._errorClass);\n  }\n\n  // ищем 1 раз _errorElement\n\n  _getErrorElement(inputElement) {\n    this._errorElement = this._formElement.querySelector(`#${inputElement.id}-error`);\n  }\n\n  //объявляем функцию, которая проверяет валидно ли поле формы и вызывает фукнцию показа\n  //или скрытия ошибки\n\n  _checkInputValidity (inputElement) {\n    if (!inputElement.validity.valid) {\n      this._showInputError(inputElement, this._inputErrorClass, this._errorClass);\n    } else {\n      this._hideInputError(inputElement, this._inputErrorClass, this._errorClass);\n    };\n  };\n\n  //объявляем функцию для кнопки submit, которая проверяет валидны ли ВСЕ поля в этой форме\n\n  _checkFormValidity () {\n    return this._inputList.some(inputElement => {\n      return !inputElement.validity.valid;\n    });\n  };\n\n  //объявляем функцию для кнопки submit, которая включает или выключает кнопку\n  //в зависимости от того, валидны ли все поля в этой форме\n\n  _toggleButtonState () {\n    if (this._checkFormValidity(this._inputList)) { // без this._inputList не работает\n      this._buttonElement.classList.add(this._inactiveButtonClass);\n      this._buttonElement.setAttribute('disabled', 'good');\n    } else {\n      this._buttonElement.classList.remove(this._inactiveButtonClass);\n      this._buttonElement.removeAttribute('disabled');\n    }\n  };\n\n  //объявляем функцию принудительной очистки ошибок в инпутах\n\n  resetValidation() {\n    this._toggleButtonState();\n\n    this._inputList.forEach((inputElement) => {\n      this._hideInputError(inputElement);\n    });\n  }\n\n  //объявляем функцию навешивания слушателей\n\n  _setEventListeners () {\n    this._inputList.forEach((inputElement) => {\n      inputElement.addEventListener('input', () => {\n        this._checkInputValidity(inputElement);\n        this._toggleButtonState();\n      });\n    });\n    this._toggleButtonState();\n  }\n\n  //функция включения валидации\n\n  enableValidation () {\n    this._setEventListeners();\n  }\n\n}\n","export const settings = {\n  inputSelector: '.form__input',\n  submitButtonSelector: '.form__submit-button',\n  inactiveButtonClass: 'form__submit-button_disabled',\n  inputErrorClass: 'form__input_type_error',\n  errorClass: 'form__error_visible',\n};\n\n","import React from 'react';\nimport { Navigate } from \"react-router-dom\";\n\nconst ProtectedRoute = ({ component: Component, ...props }) => {\n  if (!props.loggedIn) {\n    return <Navigate replace to=\"/signin\" />\n  }\n  return <Component {...props} />\n}\n\nexport default ProtectedRoute;\n","import React from 'react';\nimport Header from './Header';\nimport Main from './Main';\nimport api from '../utils/api';\nimport { CurrentUserContext } from '../contexts/CurrentUserContext';\nimport Register from './Register';\nimport Login from './Login';\nimport InfoTooltip from './InfoTooltip';\nimport applied from '../images/applied.svg';\nimport badrequest from '../images/badrequest.svg';\nimport PopupWithForm from './PopupWithForm';\nimport EditProfilePopup from './EditProfilePopup';\nimport ImagePopup from './ImagePopup';\nimport EditAvatarPopups from './EditAvatarPopup';\nimport AddPlacePopup from './AddPlacePopup';\nimport FormValidator from './FormValidator';\nimport { settings } from '../utils/utils';\nimport { Navigate, Route, Routes, useNavigate } from \"react-router-dom\";\nimport ProtectedRoute from './ProtectedRoute';\nimport * as auth from '../utils/auth';\n\n\n\nfunction App() {\n  const [cards, setCards] = React.useState([]);\n  const [isOpenInfoTooltipError, setIsOpenInfoTooltipError] = React.useState(false);\n  const [isOpenInfoTooltipSuccess, setIsOpenInfoTooltipSuccess] = React.useState(false)\n  const [isEditProfilePopupOpen, setIsEditProfilePopupOpen] = React.useState(false);\n  const [isAddPlacePopupOpen, setIsAddPlacePopupOpen] = React.useState(false);\n  const [isEditAvatarPopupOpen, setIsEditAvatarPopupOpen] = React.useState(false);\n  const [isConfirmDeletePopupOpen, setIsConfirmDeletePopupOpen] = React.useState(false);\n  const [selectedCard, setSelectedCard] = React.useState({ name: '', link: '' });\n  const [forDeleteCard, setForDeleteCard] = React.useState([])\n  const [loggedIn, setLoggedIn] = React.useState(false);\n  const [email, setEmail] = React.useState('')\n  const navigate = useNavigate()\n\n  // Получение контекста текущего профиля\n  const [currentUser, setCurrentUser] = React.useState({\n    avatar: '',\n    name: '',\n    about: '',\n    _id: ''\n  })\n\n  // Получение данных профиля с сервера\n  React.useEffect(() => {\n    api.getUserData().then(res => setCurrentUser(res))\n      .catch((err) => console.log(err))\n  }, []);\n\n  // Получение карточек с сервера\n  React.useEffect(() => {\n    api.getInitialCards().then((res) => {\n      setCards(res)\n    })\n      .catch(err => console.log(err))\n  }, []);\n\n  // Включение валидации для формы регистрации\n  //React.useEffect(() => {\n  //  const registrationValidator = new FormValidator(settings, document.forms.registration);\n  //  registrationValidator.enableValidation()\n  //}, []);\n\n  // Включение валидации для формы редактирования текстовых полей профиля\n  React.useEffect(() => {\n    const profileEditValidator = new FormValidator(settings, document.forms.profileEdit);\n    profileEditValidator.enableValidation()\n  }, []);\n\n  // Включение валидации для формы добавления карточки\n  React.useEffect(() => {\n    const cardAddValidator = new FormValidator(settings, document.forms.cardAdd);\n    cardAddValidator.enableValidation()\n  }, []);\n\n  // Включение валидации для формы редактирования аватара профиля\n  React.useEffect(() => {\n    const avatarEditValidator = new FormValidator(settings, document.forms.avatarEdit);\n    avatarEditValidator.enableValidation()\n  }, []);\n\n  // Очистка ошибок валидации для формы редактирования текстовых полей профиля\n  React.useEffect(() => {\n    const profileEditValidator = new FormValidator(settings, document.forms.profileEdit);\n    profileEditValidator.resetValidation()\n  }, [isEditProfilePopupOpen]);\n\n  // Очистка ошибок валидации для формы добавления карточки\n  React.useEffect(() => {\n    const cardAddValidator = new FormValidator(settings, document.forms.cardAdd);\n    cardAddValidator.resetValidation()\n  }, [isAddPlacePopupOpen]);\n\n  // Очистка ошибок валидации для формы редактирования аватара профиля\n  React.useEffect(() => {\n    const avatarEditValidator = new FormValidator(settings, document.forms.avatarEdit);\n    avatarEditValidator.resetValidation()\n  }, [isEditAvatarPopupOpen]);\n\n  // Сохранение токена при авторизации\n\n  function handleLogin(data) {\n    if (data.token) {\n      localStorage.setItem('jwt', data.token)\n    }\n    setLoggedIn(true)\n    navigate('main')\n  }\n\n  // Проверка токена\n\n  React.useEffect(() => {\n    const token = localStorage.getItem('jwt');\n    if (token) {\n      auth.checkToken(token).then((res) => {\n        setLoggedIn(true)\n        setEmail(res.data.email)\n        navigate('main')\n      })\n      .catch(err => console.log(err));\n    }\n  }, [navigate])\n\n  // Удаление токена\n\n  function handleSignOut() {\n    localStorage.removeItem('jwt')\n    navigate('signin')\n    setEmail('')\n  }\n\n  // Постановка лайка\n  function handleCardLike(card) {\n    const isLiked = card.likes.some(i => i._id === currentUser._id);\n    api.changeLikeCardStatus(card._id, isLiked).then((newCard) => {\n      setCards((state) => state.map((c) => c._id === card._id ? newCard : c));\n    })\n      .catch(err => console.log(err));\n  }\n\n  // Добавление удаляемой карточки в стейт и открытие попапа подтверждения удаления\n  function handleConfirmDeleteCardPopupOpen(card) {\n    setForDeleteCard(card);\n    setIsConfirmDeletePopupOpen(true)\n  }\n\n  // Удаление карточки\n  function handleCardDelete(evt) {\n    evt.preventDefault();\n\n    api.deleteCard(forDeleteCard._id).then(() => {\n      setCards((state) => state.filter((c) => c._id !== forDeleteCard._id))\n      closeAllPopups();\n    })\n      .catch(err => console.log(err))\n  }\n\n  // Единая функция закрытия попапов\n  function closeAllPopups() {\n    setIsEditProfilePopupOpen(false);\n    setIsAddPlacePopupOpen(false);\n    setIsEditAvatarPopupOpen(false);\n    setSelectedCard({ name: '', link: '' });\n    setIsConfirmDeletePopupOpen(false);\n    setIsOpenInfoTooltipError(false);\n    setIsOpenInfoTooltipSuccess(false);\n  }\n\n  // Закрытие попапов по клавише Escape\n  React.useEffect(() => {\n    if (isEditProfilePopupOpen || isAddPlacePopupOpen || isEditAvatarPopupOpen\n      || isConfirmDeletePopupOpen || isOpenInfoTooltipError || isOpenInfoTooltipError\n      || isOpenInfoTooltipSuccess === true || selectedCard.link) {\n      function handleEsc(evt) {\n        if (evt.key === 'Escape') {\n          closeAllPopups()\n        }\n      }\n\n      document.addEventListener(\"keydown\", handleEsc)\n\n      return () => {\n        document.removeEventListener(\"keydown\", handleEsc)\n      }\n    }\n  }, [isEditProfilePopupOpen, isAddPlacePopupOpen, isEditAvatarPopupOpen,\n    isConfirmDeletePopupOpen, isOpenInfoTooltipError, isOpenInfoTooltipSuccess,\n    selectedCard.link])\n\n  // Закрытие попапа по клике на область\n  function handlePopupClick(evt) {\n    if (evt.target.classList.contains(\"popup\")) {\n      closeAllPopups()\n    }\n  }\n\n  // Открытие попапа с картинкой\n  function handleCardClick(card) {\n    setSelectedCard(card)\n  }\n\n  // Обновление текстовых полей профиля\n  function handleUpdateUser(userInfo) {\n    api.patchUserData(userInfo).then(res => {\n      setCurrentUser(res)\n      closeAllPopups()\n    })\n      .catch((err) => console.log(err));\n  }\n\n  // Обновление аватара профиля\n  function handleUpdateAvatar(avatar) {\n    api.patchUserAvatar(avatar).then(res => {\n      setCurrentUser(res)\n      closeAllPopups()\n    })\n      .catch((err) => console.log(err));\n  }\n\n  // Добавление новой карточки\n  function handleAddPlaceSubmit(cardData) {\n    api.uploadNewCard(cardData).then(newCard => {\n      setCards([newCard, ...cards])\n      closeAllPopups()\n    })\n      .catch((err) => console.log(err));\n  }\n\n  return (\n    <div className=\"page\">\n      <CurrentUserContext.Provider value={currentUser}>\n        <Header email={email}\n          onSignOut={handleSignOut}\n        />\n        <Routes>\n          <Route path=\"/main\" element={<ProtectedRoute\n            component={Main}\n            loggedIn={loggedIn}\n            onEditProfile={() => setIsEditProfilePopupOpen(!isEditProfilePopupOpen)}\n            onAddPlace={() => setIsAddPlacePopupOpen(!isAddPlacePopupOpen)}\n            onEditAvatar={() => setIsEditAvatarPopupOpen(!isEditAvatarPopupOpen)}\n            cards={cards}\n            onCardClick={handleCardClick}\n            onCardLike={handleCardLike}\n            onCardDelete={handleConfirmDeleteCardPopupOpen} />\n          } />\n\n          <Route path=\"/signup\" element={<Register\n            onRegister={() => setIsOpenInfoTooltipSuccess(true)}\n            onError={() => setIsOpenInfoTooltipError(true)} />} />\n\n          <Route path=\"/signin\" element={<Login\n          onLogin={handleLogin}\n          onError={() => setIsOpenInfoTooltipError(true)} />} />\n\n          <Route path=\"*\" element={loggedIn ? <Navigate replace to=\"/main\" /> : <Navigate replace to=\"/signin\" />} />\n        </Routes>\n        <InfoTooltip title=\"Вы успешно зарегистрировались!\" image={applied}\n          isOpen={isOpenInfoTooltipSuccess} onClose={closeAllPopups} onPopupClick={handlePopupClick} />\n\n        <InfoTooltip title=\"Что-то пошло не так! Попробуйте ещё раз.\" image={badrequest}\n          isOpen={isOpenInfoTooltipError} onClose={closeAllPopups} onPopupClick={handlePopupClick} />\n\n        <EditProfilePopup name=\"profileEdit\" isOpen={isEditProfilePopupOpen} onClose={closeAllPopups}\n          onPopupClick={handlePopupClick} onUpdateUser={handleUpdateUser} />\n\n        <AddPlacePopup name=\"cardAdd\" isOpen={isAddPlacePopupOpen} onClose={closeAllPopups}\n          onPopupClick={handlePopupClick} onAddPlace={handleAddPlaceSubmit} />\n\n        <EditAvatarPopups name=\"avatarEdit\" isOpen={isEditAvatarPopupOpen} onClose={closeAllPopups}\n          onPopupClick={handlePopupClick} onUpdateAvatar={handleUpdateAvatar} />\n\n        <PopupWithForm title=\"Вы уверены?\" name=\"confirmation\" buttonText='Да'\n          class={'form__confirmation-button'} onPopupClick={handlePopupClick}\n          isOpen={isConfirmDeletePopupOpen ? 'popup_opened' : ''}\n          onClose={closeAllPopups} onSubmitForm={handleCardDelete} />\n\n        <ImagePopup\n          isOpen={selectedCard.link ? 'popup_opened' : ''}\n          onClose={closeAllPopups}\n          card={selectedCard}\n          onPopupClick={handlePopupClick}\n        />\n      </CurrentUserContext.Provider>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App.js';\nimport reportWebVitals from './reportWebVitals';\nimport { BrowserRouter } from 'react-router-dom';\n\nReactDOM.render(\n  <BrowserRouter>\n    <App />\n  </BrowserRouter>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}